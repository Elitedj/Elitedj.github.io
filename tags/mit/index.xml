<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MIT on Elitedj's Blog</title><link>/tags/mit/</link><description>Recent content in MIT on Elitedj's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2019 &lt;a href="https://github.com/Elitedj">Elitedj&lt;/a></copyright><lastBuildDate>Wed, 22 Sep 2021 23:33:21 +0000</lastBuildDate><atom:link href="/tags/mit/index.xml" rel="self" type="application/rss+xml"/><item><title>MIT6.S081 System Calls</title><link>/posts/s6081-lab2/</link><pubDate>Wed, 22 Sep 2021 23:33:21 +0000</pubDate><guid>/posts/s6081-lab2/</guid><description>Lab: System Calls System call tracing In this assignment you will add a system call tracing feature that may help you when debugging later labs. You&amp;rsquo;ll create a new trace system call that will control tracing. It should take one argument, an integer &amp;ldquo;mask&amp;rdquo;, whose bits specify which system calls to trace. For example, to trace the fork system call, a program calls trace(1 &amp;laquo; SYS_fork), where SYS_fork is a syscall number from kernel/syscall.h. You</description></item><item><title>Starting xv6 and the first process</title><link>/posts/start-xv6/</link><pubDate>Sun, 05 Sep 2021 23:39:51 +0000</pubDate><guid>/posts/start-xv6/</guid><description>Starting xv6 and the first process _entry Loader将xv6内核加载到物理地址0x80000000，然后CPU从kernel/entry.S开始执行代码。在kernel/sta</description></item><item><title>MIT6.S081 Xv6 and Unix utilities</title><link>/posts/s6081-lab1/</link><pubDate>Wed, 18 Aug 2021 23:42:38 +0000</pubDate><guid>/posts/s6081-lab1/</guid><description>Lab: Xv6 and Unix utilities MIT6.S081(Fall 2020): Operating System Engineering Schedule 实验主页 环境：CentOS 8 Boot xv6 首先需要准备环境 Lab Tools Lab Tools Page git clone --recursive https://github.com/riscv/riscv-gnu-toolchain # 官网是通过apt安装的，而yum会导致下面的包有一些会装失败</description></item></channel></rss>